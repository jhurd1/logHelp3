server.port = 8090
# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.jdbc-url=jdbc:postgresql://localhost:5432/logHelp3
spring.datasource.username=postgres
spring.datasource.password=M@nagerlab1
spring.datasource.driver-class-name=org.postgresql.Driver

#The Spring Boot app's web path or URL
#server.servlet.context-path=http://localhost:3000

# Keep the connection alive if idle for a long time (needed in production)

spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
spring.jpa.hibernate.connection.driver_class=org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application

spring.jpa.hibernate.connection.url=jdbc:postgresql://localhost:5432/logHelp3
spring.jpa.hibernate.ddl-auto=create-drop
hibernate.connection.username=postgres
hibernate.connection.password=M@nagerlab1
hibernate.show_sql=true
hibernate.hbm2ddl=update
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect